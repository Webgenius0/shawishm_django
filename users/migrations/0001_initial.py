# Generated by Django 5.1.4 on 2025-01-11 10:34

import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('U_ID', models.IntegerField(db_column='U_ID', null=True)),
                ('username', models.CharField(db_column='U_Username', max_length=45, unique=True)),
                ('U_fullname', models.CharField(db_column='U_FullName', max_length=45, null=True)),
                ('U_sex', models.CharField(db_column='U_Sex', max_length=45, null=True)),
                ('U_address', models.CharField(db_column='U_Address', max_length=255, null=True)),
                ('U_Role', models.CharField(db_column='U_Role', max_length=45, null=True)),
                ('U_phone', models.CharField(db_column='U_Phone', max_length=45, null=True)),
                ('RG_ID', models.CharField(db_column='RG_ID', max_length=45, null=True)),
                ('is_staff', models.BooleanField(db_column='is_staff', default=False)),
                ('is_active', models.BooleanField(db_column='is_active', default=True)),
                ('date_joined', models.DateTimeField(db_column='date_joined', default=django.utils.timezone.now)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
